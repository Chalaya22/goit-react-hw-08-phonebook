{"version":3,"file":"static/js/978.bb445d59.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactElements/ContactElements.module.css?8c47","components/ContactElements/ContactElements.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/LoaderPhone/LoaderPhone.module.css?caaa","components/LoaderPhone/LoaderPhone.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectorContacts = state => state.contacts.contacts;\nexport const selectorIsLoading = state => state.contacts.isLoading;\nexport const selectorError = state => state.contacts.error;\nexport const selectorFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"labelText\":\"ContactForm_labelText__JB4h1\",\"imputForm\":\"ContactForm_imputForm__qzGyq\",\"buttonForm\":\"ContactForm_buttonForm__RQPsC\"};","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contactOperation';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(' ');\n  const [number, setNumber] = useState(' ');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const reset = () => {\n    setName(' ');\n    setNumber(' ');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newObject = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    dispatch(addContact(newObject));\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label>\n        <p className={css.labelText}>Name</p>\n        <input\n          className={css.imputForm}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          placeholder=\"username: \"\n          required\n        />\n      </label>\n      <label>\n        <p className={css.labelText}>Number</p>\n        <input\n          className={css.imputForm}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          placeholder=\"Enter number tel:\"\n          required\n        />\n      </label>\n\n      <button className={css.buttonForm} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactElements\":\"ContactElements_contactElements__XX5lQ\",\"itemName\":\"ContactElements_itemName__95nsE\",\"itemNumber\":\"ContactElements_itemNumber__+In2l\",\"buttonForm\":\"ContactElements_buttonForm__mRKFG\"};","import css from './ContactElements.module.css';\nconst ContactElements = ({ id, name, number, onDelete }) => {\n  return (\n    <li key={id} className={css.contactElements}>\n      <span className={css.itemName}> {name}:</span>\n      <span className={css.itemNumber}> {number}</span>\n      <button\n        className={css.buttonForm}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n      >\n        Delay\n      </button>\n    </li>\n  );\n};\nexport default ContactElements;\n","import css from './ContactList.module.css';\nimport ContactElements from '../ContactElements/ContactElements';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact } from 'redux/contactOperation';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.filter.filter);\n\n  const onFilterContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.trim().toLowerCase())\n    );\n  };\n\n  const filteredContacts = onFilterContacts();\n\n  function onDelete(id) {\n    dispatch(removeContact(id));\n  }\n\n  return (\n    <ul className={css.contactList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactElements\n          key={id}\n          name={name}\n          id={id}\n          number={number}\n          onDelete={onDelete}\n        />\n      ))}\n    </ul>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"css\":\"LoaderPhone_css__Tpxmx\",\"styleLoader\":\"LoaderPhone_styleLoader__8hJ6M\"};","import { Dna } from 'react-loader-spinner';\nimport css from './LoaderPhone.module.css';\nconst Loader = () => {\n  return (\n    <div className={css.styleLoader}>\n      <Dna\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterTitle\":\"Filter_filterTitle__5SDqd\",\"filterImput\":\"Filter_filterImput__amMjC\"};","import { createFilter } from 'redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectorFilter } from 'redux/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectorFilter);\n\n  const onFilter = event => {\n    dispatch(createFilter(event.target.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label htmlFor=\"filter\">\n        <p className={css.filterTitle}>FIND CONTACT BY NAME</p>\n        <input\n          className={css.filterImput}\n          type=\"text\"\n          name=\"filter\"\n          id=\"filter\"\n          value={filter}\n          onChange={onFilter}\n          placeholder=\" Username: \"\n          required\n        />\n      </label>\n    </div>\n  );\n};\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { fetchContacts } from 'redux/contactOperation';\nimport {\n  selectorContacts,\n  selectorIsLoading,\n  selectorError,\n} from 'redux/selectors';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/LoaderPhone/LoaderPhone';\nimport Filter from 'components/Filter/Filter';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectorContacts);\n  const isLoading = useSelector(selectorIsLoading);\n  const error = useSelector(selectorError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (error === 'ERR_BAD_REQUEST') {\n      toast.error('Sorry! There are some problems! Try again later.');\n      return;\n    }\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return (\n    <section className=\"styledSection\">\n      {error !== null && <p> Ooops... {error}</p>}\n      {isLoading && <Loader />}\n      <h1 className=\"titlePhone\">Phonebook </h1>\n      <ContactForm />\n\n      <h2 className=\"titleContact\">Contacts</h2>\n      {contacts.length > 1 && <Filter />}\n\n      {<ContactList />}\n    </section>\n  );\n};\nexport default Contacts;\n"],"names":["selectorContacts","state","contacts","selectorIsLoading","isLoading","selectorError","error","selectorFilter","filter","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleInputChange","event","_event$currentTarget","currentTarget","value","_jsxs","onSubmit","e","preventDefault","newObject","id","nanoid","addContact","className","css","children","_jsx","type","onChange","placeholder","required","_ref","onDelete","onClick","useSelector","filteredContacts","contact","toLowerCase","includes","trim","removeContact","map","ContactElements","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","htmlFor","createFilter","target","Contacts","useEffect","fetchContacts","toast","Loader","ContactForm","length","Filter","ContactList"],"sourceRoot":""}